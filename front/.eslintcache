[{"/home/joel/Code/conftracker/front/src/index.js":"1","/home/joel/Code/conftracker/front/src/reportWebVitals.js":"2","/home/joel/Code/conftracker/front/src/App.js":"3","/home/joel/Code/conftracker/front/src/keycloak.js":"4","/home/joel/Code/conftracker/front/src/routes/index.js":"5","/home/joel/Code/conftracker/front/src/pages/Profile.js":"6","/home/joel/Code/conftracker/front/src/pages/Talk.js":"7","/home/joel/Code/conftracker/front/src/pages/Upcoming.js":"8","/home/joel/Code/conftracker/front/src/pages/Cfp/Submit.js":"9","/home/joel/Code/conftracker/front/src/pages/Cfp.js":"10","/home/joel/Code/conftracker/front/src/pages/Home.js":"11","/home/joel/Code/conftracker/front/src/utils/PrivateRoute.js":"12","/home/joel/Code/conftracker/front/src/pages/Cfp/Approved.js":"13","/home/joel/Code/conftracker/front/src/components/Layout.js":"14","/home/joel/Code/conftracker/front/src/components/Link.js":"15","/home/joel/Code/conftracker/front/src/api/index.js":"16","/home/joel/Code/conftracker/front/src/utils/helpers.js":"17","/home/joel/Code/conftracker/front/src/components/LoginButton.js":"18","/home/joel/Code/conftracker/front/src/components/LogoutButton.js":"19","/home/joel/Code/conftracker/front/src/components/Auth0ProviderWithHistory.js":"20"},{"size":831,"mtime":1634572133896,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608755331001,"results":"23","hashOfConfig":"22"},{"size":247,"mtime":1634571935614,"results":"24","hashOfConfig":"22"},{"size":217,"mtime":1608819453572,"results":"25","hashOfConfig":"22"},{"size":1080,"mtime":1634322414032,"results":"26","hashOfConfig":"22"},{"size":4491,"mtime":1614623653070,"results":"27","hashOfConfig":"22"},{"size":4396,"mtime":1610403026657,"results":"28","hashOfConfig":"22"},{"size":2437,"mtime":1612366674922,"results":"29","hashOfConfig":"22"},{"size":4745,"mtime":1628002268406,"results":"30","hashOfConfig":"22"},{"size":13336,"mtime":1628002268405,"results":"31","hashOfConfig":"22"},{"size":960,"mtime":1634572962385,"results":"32","hashOfConfig":"22"},{"size":854,"mtime":1634310863047,"results":"33","hashOfConfig":"22"},{"size":2879,"mtime":1610561776474,"results":"34","hashOfConfig":"22"},{"size":5449,"mtime":1634312149912,"results":"35","hashOfConfig":"22"},{"size":343,"mtime":1610547156673,"results":"36","hashOfConfig":"22"},{"size":4606,"mtime":1634573269800,"results":"37","hashOfConfig":"22"},{"size":247,"mtime":1608842389739,"results":"38","hashOfConfig":"22"},{"size":331,"mtime":1634571670142,"results":"39","hashOfConfig":"22"},{"size":288,"mtime":1634310329507,"results":"40","hashOfConfig":"22"},{"size":691,"mtime":1634571849549,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"qyv0gu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/joel/Code/conftracker/front/src/index.js",[],["86","87"],"/home/joel/Code/conftracker/front/src/reportWebVitals.js",[],"/home/joel/Code/conftracker/front/src/App.js",[],"/home/joel/Code/conftracker/front/src/keycloak.js",[],"/home/joel/Code/conftracker/front/src/routes/index.js",[],"/home/joel/Code/conftracker/front/src/pages/Profile.js",["88"],"import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Button, ClipboardCopy, ClipboardCopyVariant, Form, FormGroup, FormSelect, FormSelectOption, Modal, PageSection, PageSectionVariants, Text, TextArea, TextContent, TextInput } from \"@patternfly/react-core\";\nimport PlusIcon from \"@patternfly/react-icons/dist/js/icons/plus-circle-icon\";\nimport API from \"../api\";\n\nexport default class Cfp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: [],\n      modal: {\n        fieldType: \"link\",\n        label: \"\",\n        value: \"\"\n      },\n      isModalOpen: false\n    };\n\n    this.handleModalToggle = () => {\n      this.setState({isModalOpen: !this.state.isModalOpen});\n    }\n\n    this.saveField = async () => {\n      await API.postProfileField(this.state.modal);\n      this.updateProfile();\n      this.handleModalToggle();\n    }\n\n    this.updateProfile = async () => {\n      let profile = await API.getProfile();\n      this.setState({profile});\n    }\n\n    this.onChange = (newValue, e) => {\n      const id = e.target.id;\n      let state = Object.assign({}, this.state);\n      state.modal[id] = newValue;\n      this.setState(state);\n    }\n  }\n\n  componentDidMount() {\n    this.updateProfile();\n  }\n\n  render() {\n    const { isModalOpen, profile, modal } = this.state;\n    return (\n      <Layout>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Profile</Text>\n            <Text component=\"p\">\n              Profile and other CFP cut and paste information\n            </Text>\n          </TextContent>\n        </PageSection>\n\n        <PageSection>\n        <Text component=\"p\" align=\"right\">\n              <PlusIcon onClick={this.handleModalToggle} />\n              <Modal \n                width={\"50%\"} \n                title=\"Add CFP Cut&amp;Paste info\" \n                isOpen={isModalOpen} \n                onClose={this.handleModalToggle}\n                actions={[\n                  <Button key=\"confirm\" variant=\"primary\" onClick={this.saveField}>Add</Button>,\n                  <Button key=\"cancel\" variant=\"link\" onClick={this.handleModalToggle}>Cancel</Button>\n                ]}>\n                  <Form>\n                    <FormGroup label=\"Type\" fieldId=\"type\">\n                      <FormSelect\n                        value={modal.fieldType}\n                        onChange={this.onChange}\n                        id=\"horzontal-form-title\"\n                        name=\"horizontal-form-title\"\n                        aria-label=\"Field Type\"\n                        id=\"fieldType\"\n                      >\n                        <FormSelectOption key={0} value={\"long\"} label={\"Long field\"} />\n                        <FormSelectOption key={1} value={\"link\"} label={\"Simple Link\"} />\n\n                      </FormSelect>\n                    </FormGroup>\n                    {modal.fieldType === \"link\" && \n                    <React.Fragment>\n                      <FormGroup label=\"Label\" fieldId=\"label\">\n                        <TextInput isRequired id=\"label\" onChange={this.onChange} />\n                      </FormGroup>\n                      <FormGroup label=\"Value\" fieldId=\"value\">\n                        <TextInput isRequired id=\"value\" onChange={this.onChange} />\n                      </FormGroup>\n                    </React.Fragment>\n                    }\n                    {modal.fieldType === \"long\" && \n                    <React.Fragment>\n                      <FormGroup label=\"Label\" fieldId=\"label\">\n                        <TextInput isRequired id=\"label\" onChange={this.onChange} />\n                      </FormGroup>\n                      <FormGroup label=\"Value\" fieldId=\"value\">\n                        <TextArea id=\"value\" onChange={this.onChange} />\n                      </FormGroup>\n                    </React.Fragment>\n                    }\n                  </Form>\n                </Modal>\n            </Text>\n        </PageSection>\n\n        <PageSection className=\"pf-u-text-left\" variant={PageSectionVariants.light}>\n          {profile.map(field => {\n            return(\n              <React.Fragment>\n                {field.label}\n                <ClipboardCopy isReadOnly variant={ClipboardCopyVariant.expansion}>\n                  {field.value}\n                </ClipboardCopy>\n              </React.Fragment>\n            )\n          })}\n        </PageSection>\n      </Layout>    \n    )\n  }\n}","/home/joel/Code/conftracker/front/src/pages/Talk.js",[],"/home/joel/Code/conftracker/front/src/pages/Upcoming.js",[],"/home/joel/Code/conftracker/front/src/pages/Cfp/Submit.js",[],"/home/joel/Code/conftracker/front/src/pages/Cfp.js",[],"/home/joel/Code/conftracker/front/src/pages/Home.js",["89","90","91","92"],"/home/joel/Code/conftracker/front/src/utils/PrivateRoute.js",["93","94","95"],"import { useKeycloak } from \"react-keycloak\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport function PrivateRoute({ component: Component, roles, ...rest }) {\n  // const [keycloak] = useKeycloak();\n\n  // const isAuthorized = roles => {\n  //   if (keycloak && roles) {\n  //     return roles.some(r => {\n  //       const realm = keycloak.hasRealmRole(r);\n  //       const resource = keycloak.hasResourceRole(r);\n  //       return realm || resource;\n  //     });\n  //   }\n  //   return false;\n  // }\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const isAuthorized = () => isAuthenticated;\n\n  return (\n    <Route {...rest} render={props => {\n      return isAuthorized(roles) ? <Component {...props} /> : <Redirect to={{ pathname: \"/\" }} />\n    }} />\n  )\n}","/home/joel/Code/conftracker/front/src/pages/Cfp/Approved.js",[],"/home/joel/Code/conftracker/front/src/components/Layout.js",["96","97"],"import React, { Component } from \"react\";\nimport {\n  Avatar,\n  Button,\n  ButtonVariant,\n  Dropdown,\n  DropdownGroup,\n  DropdownToggle,\n  DropdownItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSidebar,\n  PageHeaderTools,\n  PageHeaderToolsGroup,\n  PageHeaderToolsItem\n} from '@patternfly/react-core';\nimport Link from \"./Link\";\nimport CogIcon from '@patternfly/react-icons/dist/js/icons/cog-icon';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport LogoutButton from \"./LogoutButton\";\n// import { withKeycloak } from \"react-keycloak\";\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      route: window.location.pathname\n    };\n    this.onDropdownToggle = isDropdownOpen => {\n      this.setState({\n        isDropdownOpen\n      });\n    };\n    this.onDropdownSelect = event => {\n      this.setState({\n        isDropdownOpen: !this.state.isDropdownOpen\n      });\n    };\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\n      this.setState({\n        isKebabDropdownOpen\n      });\n    };\n    this.onKebabDropdownSelect = event => {\n      this.setState({\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n      });\n    };\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n  }\n\n  render() {\n    // let keycloak = this.props.keycloak;\n    const { user, isAuthenticated, isLoading } = this.props.auth0;\n    \n    const { isDropdownOpen, isKebabDropdownOpen, route } = this.state;\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <Link to=\"/cfp\">\n          <NavItem to=\"/cfp\" itemId={0} isActive={route.substr(0, 4) === \"/cfp\"}>\n          CFPs\n          </NavItem>\n          </Link>\n          <Link to=\"/talk\">\n          <NavItem to=\"/talk\" itemId={1} isActive={route.indexOf(\"/talk\") > -1}>\n            My Talks\n          </NavItem>\n          </Link>\n          <Link to=\"/upcoming\">\n            <NavItem to=\"/upcoming\" itemId={2} isActive={route.indexOf(\"/upcoming\") > -1}>\n              Upcoming Events\n            </NavItem>\n          </Link>\n        </NavList>\n      </Nav>\n    );\n    const kebabDropdownItems = [\n      <DropdownItem key=\"settings\">\n        <CogIcon /> Settings\n      </DropdownItem>,\n      <DropdownItem key=\"help\">\n        <HelpIcon /> Help\n      </DropdownItem>\n    ];\n    const userDropdownItems = [\n      <DropdownGroup key=\"group 2\">\n        <DropdownItem key=\"group 2 profile\">\n          <Link to=\"/profile\">My Profile</Link>\n        </DropdownItem>\n        {/* <DropdownItem key=\"group 2 logout\" onClick={() => keycloak.logout()}>Logout</DropdownItem> */}\n        <LogoutButton />\n      </DropdownGroup>\n    ];\n    const headerTools = (\n      <PageHeaderTools>\n        <PageHeaderToolsGroup\n          visibility={{\n            default: 'hidden',\n            lg: 'visible'\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\n        >\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Settings actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Help actions\" variant={ButtonVariant.plain}>\n              <HelpIcon />\n            </Button>\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <PageHeaderToolsGroup>\n          <PageHeaderToolsItem\n            visibility={{\n              lg: 'hidden'\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n              dropdownItems={kebabDropdownItems}\n            />\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>{user.name || user.email}</DropdownToggle>}\n              dropdownItems={userDropdownItems}\n            />\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <Avatar src={imgAvatar} alt=\"Avatar image\" />\n      </PageHeaderTools>\n    );\n    const Header = (\n      <PageHeader headerTools={headerTools} showNavToggle />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} />;\n    const pageId = 'main-content-page-layout-default-nav';\n    return (\n      <React.Fragment>\n        <Page\n          header={Header}\n          sidebar={Sidebar}\n          isManagedSidebar\n          mainContainerId={pageId}\n        >\n          {this.props.children}\n        </Page>\n      </React.Fragment>\n    );\n  }\n}\n\n// export default withKeycloak(Layout);\nexport default withAuth0(Layout);","/home/joel/Code/conftracker/front/src/components/Link.js",[],"/home/joel/Code/conftracker/front/src/api/index.js",[],"/home/joel/Code/conftracker/front/src/utils/helpers.js",[],"/home/joel/Code/conftracker/front/src/components/LoginButton.js",[],"/home/joel/Code/conftracker/front/src/components/LogoutButton.js",[],"/home/joel/Code/conftracker/front/src/components/Auth0ProviderWithHistory.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":80,"column":25,"nodeType":"104","endLine":80,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":2,"column":62,"nodeType":"107","messageId":"108","endLine":2,"endColumn":68},{"ruleId":"105","severity":1,"message":"109","line":14,"column":11,"nodeType":"107","messageId":"108","endLine":14,"endColumn":15},{"ruleId":"105","severity":1,"message":"110","line":14,"column":34,"nodeType":"107","messageId":"108","endLine":14,"endColumn":43},{"ruleId":"111","severity":1,"message":"112","line":24,"column":11,"nodeType":"113","endLine":24,"endColumn":15},{"ruleId":"105","severity":1,"message":"114","line":1,"column":10,"nodeType":"107","messageId":"108","endLine":1,"endColumn":21},{"ruleId":"105","severity":1,"message":"109","line":19,"column":11,"nodeType":"107","messageId":"108","endLine":19,"endColumn":15},{"ruleId":"105","severity":1,"message":"110","line":19,"column":34,"nodeType":"107","messageId":"108","endLine":19,"endColumn":43},{"ruleId":"105","severity":1,"message":"115","line":66,"column":19,"nodeType":"107","messageId":"108","endLine":66,"endColumn":34},{"ruleId":"105","severity":1,"message":"110","line":66,"column":36,"nodeType":"107","messageId":"108","endLine":66,"endColumn":45},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'isLoading' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useKeycloak' is defined but never used.","'isAuthenticated' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]