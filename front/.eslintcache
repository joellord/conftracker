[{"/opt/app/src/index.js":"1","/opt/app/src/reportWebVitals.js":"2","/opt/app/src/App.js":"3","/opt/app/src/keycloak.js":"4","/opt/app/src/routes/index.js":"5","/opt/app/src/pages/Upcoming.js":"6","/opt/app/src/pages/Talk.js":"7","/opt/app/src/pages/Cfp.js":"8","/opt/app/src/pages/Home.js":"9","/opt/app/src/pages/Cfp/Submit.js":"10","/opt/app/src/pages/Cfp/Approved.js":"11","/opt/app/src/utils/PrivateRoute.js":"12","/opt/app/src/components/Link.js":"13","/opt/app/src/components/Layout.js":"14","/opt/app/src/api/index.js":"15","/opt/app/src/utils/helpers.js":"16","/opt/app/src/pages/Profile.js":"17"},{"size":500,"mtime":1608755331001,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608755331001,"results":"20","hashOfConfig":"19"},{"size":406,"mtime":1608825364039,"results":"21","hashOfConfig":"19"},{"size":217,"mtime":1608819453572,"results":"22","hashOfConfig":"19"},{"size":1227,"mtime":1614615926030,"results":"23","hashOfConfig":"19"},{"size":2437,"mtime":1612366674922,"results":"24","hashOfConfig":"19"},{"size":4396,"mtime":1610403026657,"results":"25","hashOfConfig":"19"},{"size":13336,"mtime":1612185492746,"results":"26","hashOfConfig":"19"},{"size":775,"mtime":1608825594020,"results":"27","hashOfConfig":"19"},{"size":4745,"mtime":1614697133650,"results":"28","hashOfConfig":"19"},{"size":2879,"mtime":1610561776474,"results":"29","hashOfConfig":"19"},{"size":669,"mtime":1609780240659,"results":"30","hashOfConfig":"19"},{"size":343,"mtime":1610547156673,"results":"31","hashOfConfig":"19"},{"size":5264,"mtime":1614615890861,"results":"32","hashOfConfig":"19"},{"size":3987,"mtime":1614622546022,"results":"33","hashOfConfig":"19"},{"size":247,"mtime":1608842389739,"results":"34","hashOfConfig":"19"},{"size":4491,"mtime":1614623653070,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1rpusvg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},"/opt/app/src/index.js",[],["72","73"],"/opt/app/src/reportWebVitals.js",[],"/opt/app/src/App.js",[],"/opt/app/src/keycloak.js",[],"/opt/app/src/routes/index.js",[],"/opt/app/src/pages/Upcoming.js",[],"/opt/app/src/pages/Talk.js",[],"/opt/app/src/pages/Cfp.js",[],"/opt/app/src/pages/Home.js",[],"/opt/app/src/pages/Cfp/Submit.js",[],"/opt/app/src/pages/Cfp/Approved.js",[],"/opt/app/src/utils/PrivateRoute.js",[],"/opt/app/src/components/Link.js",[],"/opt/app/src/components/Layout.js",[],"/opt/app/src/api/index.js",[],"/opt/app/src/utils/helpers.js",[],"/opt/app/src/pages/Profile.js",["74"],"import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Button, ClipboardCopy, ClipboardCopyVariant, Form, FormGroup, FormSelect, FormSelectOption, Modal, PageSection, PageSectionVariants, Text, TextArea, TextContent, TextInput } from \"@patternfly/react-core\";\nimport PlusIcon from \"@patternfly/react-icons/dist/js/icons/plus-circle-icon\";\nimport API from \"../api\";\n\nexport default class Cfp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      profile: [],\n      modal: {\n        fieldType: \"link\",\n        label: \"\",\n        value: \"\"\n      },\n      isModalOpen: false\n    };\n\n    this.handleModalToggle = () => {\n      this.setState({isModalOpen: !this.state.isModalOpen});\n    }\n\n    this.saveField = async () => {\n      await API.postProfileField(this.state.modal);\n      this.updateProfile();\n      this.handleModalToggle();\n    }\n\n    this.updateProfile = async () => {\n      let profile = await API.getProfile();\n      this.setState({profile});\n    }\n\n    this.onChange = (newValue, e) => {\n      const id = e.target.id;\n      let state = Object.assign({}, this.state);\n      state.modal[id] = newValue;\n      this.setState(state);\n    }\n  }\n\n  componentDidMount() {\n    this.updateProfile();\n  }\n\n  render() {\n    const { isModalOpen, profile, modal } = this.state;\n    return (\n      <Layout>\n        <PageSection variant={PageSectionVariants.light}>\n          <TextContent>\n            <Text component=\"h1\">Profile</Text>\n            <Text component=\"p\">\n              Profile and other CFP cut and paste information\n            </Text>\n          </TextContent>\n        </PageSection>\n\n        <PageSection>\n        <Text component=\"p\" align=\"right\">\n              <PlusIcon onClick={this.handleModalToggle} />\n              <Modal \n                width={\"50%\"} \n                title=\"Add CFP Cut&amp;Paste info\" \n                isOpen={isModalOpen} \n                onClose={this.handleModalToggle}\n                actions={[\n                  <Button key=\"confirm\" variant=\"primary\" onClick={this.saveField}>Add</Button>,\n                  <Button key=\"cancel\" variant=\"link\" onClick={this.handleModalToggle}>Cancel</Button>\n                ]}>\n                  <Form>\n                    <FormGroup label=\"Type\" fieldId=\"type\">\n                      <FormSelect\n                        value={modal.fieldType}\n                        onChange={this.onChange}\n                        id=\"horzontal-form-title\"\n                        name=\"horizontal-form-title\"\n                        aria-label=\"Field Type\"\n                        id=\"fieldType\"\n                      >\n                        <FormSelectOption key={0} value={\"long\"} label={\"Long field\"} />\n                        <FormSelectOption key={1} value={\"link\"} label={\"Simple Link\"} />\n\n                      </FormSelect>\n                    </FormGroup>\n                    {modal.fieldType === \"link\" && \n                    <React.Fragment>\n                      <FormGroup label=\"Label\" fieldId=\"label\">\n                        <TextInput isRequired id=\"label\" onChange={this.onChange} />\n                      </FormGroup>\n                      <FormGroup label=\"Value\" fieldId=\"value\">\n                        <TextInput isRequired id=\"value\" onChange={this.onChange} />\n                      </FormGroup>\n                    </React.Fragment>\n                    }\n                    {modal.fieldType === \"long\" && \n                    <React.Fragment>\n                      <FormGroup label=\"Label\" fieldId=\"label\">\n                        <TextInput isRequired id=\"label\" onChange={this.onChange} />\n                      </FormGroup>\n                      <FormGroup label=\"Value\" fieldId=\"value\">\n                        <TextArea id=\"value\" onChange={this.onChange} />\n                      </FormGroup>\n                    </React.Fragment>\n                    }\n                  </Form>\n                </Modal>\n            </Text>\n        </PageSection>\n\n        <PageSection className=\"pf-u-text-left\" variant={PageSectionVariants.light}>\n          {profile.map(field => {\n            return(\n              <React.Fragment>\n                {field.label}\n                <ClipboardCopy isReadOnly variant={ClipboardCopyVariant.expansion}>\n                  {field.value}\n                </ClipboardCopy>\n              </React.Fragment>\n            )\n          })}\n        </PageSection>\n      </Layout>    \n    )\n  }\n}",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":80,"column":25,"nodeType":"81","endLine":80,"endColumn":39},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]